{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/appConfig.ts","../../src/stores/stores.ts","../../src/stores/weaves.ts","../../node_modules/svelte-scrollto/src/helper.js","../../node_modules/svelte-scrollto/src/index.js","../../node_modules/svelte/easing/index.mjs","../../src/stores/patternTemplates.ts","../../src/components/NavBar.svelte","../../src/components/Thread.svelte","../../src/components/Tablet.svelte","../../src/components/Summary.svelte","../../src/components/ThreadingChart.svelte","../../src/components/ThreadWeave.svelte","../../src/components/TabletWeave.svelte","../../src/components/Weave.svelte","../../src/components/Instructions.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\nconst initAppConfig = {\n    weaveSize: 3,\n    weaveBorderColor: '#AAAAAA',\n    weftColor: '#000000',\n    weaveLength: 100\n};\nconst storedAppConfig = localStorage.appConfig ? JSON.parse(localStorage.appConfig) : initAppConfig;\nexport const appConfig = writable(storedAppConfig);\nappConfig.subscribe((value) => localStorage.appConfig = JSON.stringify(value));\n","import { writable, derived } from 'svelte/store';\nimport { appConfig } from './appConfig.js';\n///////////////////////////////////////////////////////////\n// Writable stores\n///////////////////////////////////////////////////////////\nconst initTablets = [\n    { sDirection: true, holes: 4, threads: [{ color: \"#204a87\" }, { color: \"#204a87\" }, { color: \"#204a87\" }, { color: \"#204a87\" }] },\n    { sDirection: true, holes: 4, threads: [{ color: \"#ffffff\" }, { color: \"#d3d7cf\" }, { color: \"#ffffff\" }, { color: \"#ffffff\" }] },\n    { sDirection: true, holes: 4, threads: [{ color: \"#ffffff\" }, { color: \"#d3d7cf\" }, { color: \"#ffffff\" }, { color: \"#ffffff\" }] },\n    { sDirection: true, holes: 4, threads: [{ color: \"#204a87\" }, { color: \"#204a87\" }, { color: \"#204a87\" }, { color: \"#204a87\" }] }\n];\nconst storedWeaveRows = localStorage.weaveRows ? parseInt(localStorage.weaveRows) : 19;\nconst storedTablets = localStorage.tablets ? JSON.parse(localStorage.tablets) : initTablets;\nconst storedRotationDirections = localStorage.rotationDirections ? JSON.parse(localStorage.rotationDirections) : {};\nconst initialized = writable(false);\nexport const weaveRows = writable(storedWeaveRows);\nexport const tablets = writable(storedTablets);\nexport const rotationDirections = writable(storedRotationDirections);\nweaveRows.subscribe((value) => localStorage.weaveRows = value);\ntablets.subscribe((value) => localStorage.tablets = JSON.stringify(value));\nrotationDirections.subscribe((value) => localStorage.rotationDirections = JSON.stringify(value));\nexport function initStores() {\n    const parts = atob(window.location.hash.substring(1)).split(':');\n    if (parts.length !== 4) {\n        initialized.set(true);\n        return;\n    }\n    const numberOfTablets = parseInt(parts[0]);\n    const numberOfWeaves = parseInt(parts[1]);\n    const initRotationDirections = {};\n    [...Array(numberOfWeaves).keys()].forEach((row) => {\n        [...Array(numberOfTablets).keys()].forEach((col) => {\n            if (typeof initRotationDirections[row] === 'undefined') {\n                initRotationDirections[row] = {};\n            }\n            initRotationDirections[row][col] = parts[2][(row * numberOfTablets + col)] === '1';\n        });\n    });\n    const initTablets = parts[3].substring(1).split('|').map(tablet => {\n        return {\n            sDirection: tablet[0] === '1',\n            holes: 4,\n            threads: tablet.substring(2).split('#').map(colorCode => {\n                return { color: `#${colorCode}` };\n            })\n        };\n    });\n    weaveRows.set(numberOfWeaves);\n    rotationDirections.set(initRotationDirections);\n    tablets.set(initTablets);\n    initialized.set(true);\n}\n///////////////////////////////////////////////////////////\n// Derived stores\n///////////////////////////////////////////////////////////\n// Update URL hash with every update\nexport const urlHash = derived([initialized, weaveRows, tablets, rotationDirections], ([$initialized, $weaveRows, $tablets, $rotationDirections]) => {\n    if (!$initialized) {\n        return null;\n    }\n    const rotDirValue = [...Array($weaveRows).keys()].reduce((previousValue, _, index) => {\n        return [...Array($tablets.length).keys()].reduce((prev, _, idx) => {\n            const rotateBack = typeof $rotationDirections[index] !== 'undefined' && $rotationDirections[index][idx] === true;\n            return `${prev}${(rotateBack ? '1' : '0')}`;\n        }, previousValue);\n    }, '');\n    const colors = $tablets.reduce((previousValue, currentValue) => {\n        return `${previousValue}|${(currentValue.sDirection ? '1' : '0')}` + currentValue.threads.reduce((prev, curr) => `${prev}${curr.color}`, '');\n    }, '');\n    return `${$tablets.length}:${$weaveRows}:${rotDirValue}:${colors}`;\n}).subscribe((value) => {\n    if (value) {\n        window.location.hash = \"#\" + btoa(value);\n    }\n});\n// Colors\nconst patternColors = derived(tablets, ($tablets) => {\n    const summary = {};\n    $tablets.forEach((tablet) => {\n        tablet.threads.forEach((thread) => {\n            if (typeof summary[thread.color] == 'undefined') {\n                summary[thread.color] = 1;\n            }\n            else {\n                summary[thread.color] = summary[thread.color] + 1;\n            }\n        });\n    });\n    return Object.entries(summary).map(([key, value]) => {\n        return { \"color\": key, \"count\": value };\n    });\n});\nexport const weaveLength = derived([appConfig, patternColors], ([$appConfig, $patternColors]) => {\n    const singleYarnLength = Number($appConfig.weaveLength) + Number($appConfig.weaveLength * 0.2) + 50;\n    const yarnLengths = $patternColors.map((colorCount) => {\n        const yarnLength = colorCount.count * singleYarnLength;\n        return {\n            color: colorCount.color,\n            count: colorCount.count,\n            yarnLength: yarnLength\n        };\n    });\n    return {\n        singleYarnLength: singleYarnLength,\n        yarnLengths: yarnLengths\n    };\n});\n","import { derived } from 'svelte/store';\nimport { weaveRows, tablets, rotationDirections } from './stores.js';\n// Front pattern\nexport const weavesFront = derived([weaveRows, tablets, rotationDirections], ([$weaveRows, $tablets, $rotationDirections]) => {\n    return $tablets.map((tablet, tabletIndex) => generateWeaves($weaveRows, $rotationDirections, tablet, tabletIndex, 0, tablet.sDirection));\n});\n// Back pattern\nexport const weavesBack = derived([weaveRows, tablets, rotationDirections], ([$weaveRows, $tablets, $rotationDirections]) => {\n    return $tablets.map((tablet, tabletIndex) => generateWeaves($weaveRows, $rotationDirections, tablet, tabletIndex, 2, !tablet.sDirection));\n});\nfunction generateWeaves(weaveRows, rotationDirections, tablet, tabletIndex, colorIndex, direction) {\n    const threads = tablet.threads;\n    const numberOfHoles = threads.length;\n    let previousRotation = false;\n    return [...Array(weaveRows).keys()].map((i) => {\n        let offset = 1;\n        let tabletDirection = direction;\n        const rotateBack = typeof rotationDirections[i] !== 'undefined' && rotationDirections[i][tabletIndex] === true;\n        if (rotateBack) {\n            tabletDirection = !direction;\n            offset = -1;\n        }\n        if (previousRotation != rotateBack) {\n            offset = 0;\n        }\n        colorIndex = (colorIndex + offset + threads.length) % numberOfHoles;\n        const weaveColor = threads[colorIndex].color;\n        previousRotation = rotateBack;\n        return {\n            color: weaveColor,\n            sDirection: tabletDirection\n        };\n    });\n}\n","export default {\n  $(selector) {\n    if (typeof selector === \"string\") {\n      return document.querySelector(selector);\n    }\n    return selector;\n  },\n  extend(...args) {\n    return Object.assign(...args);\n  },\n  cumulativeOffset(element) {\n    let top = 0;\n    let left = 0;\n\n    do {\n      top += element.offsetTop || 0;\n      left += element.offsetLeft || 0;\n      element = element.offsetParent;\n    } while (element);\n\n    return {\n      top: top,\n      left: left\n    };\n  },\n  directScroll(element) {\n    return element && element !== document && element !== document.body;\n  },\n  scrollTop(element, value) {\n    let inSetter = value !== undefined;\n    if (this.directScroll(element)) {\n      return inSetter ? (element.scrollTop = value) : element.scrollTop;\n    } else {\n      return inSetter\n        ? (document.documentElement.scrollTop = document.body.scrollTop = value)\n        : window.pageYOffset ||\n            document.documentElement.scrollTop ||\n            document.body.scrollTop ||\n            0;\n    }\n  },\n  scrollLeft(element, value) {\n    let inSetter = value !== undefined;\n    if (this.directScroll(element)) {\n      return inSetter ? (element.scrollLeft = value) : element.scrollLeft;\n    } else {\n      return inSetter\n        ? (document.documentElement.scrollLeft = document.body.scrollLeft = value)\n        : window.pageXOffset ||\n            document.documentElement.scrollLeft ||\n            document.body.scrollLeft ||\n            0;\n    }\n  }\n};\n","import { cubicInOut } from \"svelte/easing\";\nimport { noop, loop, now } from \"svelte/internal\";\nimport _ from \"./helper\";\n\nconst defaultOptions = {\n  container: \"body\",\n  duration: 500,\n  delay: 0,\n  offset: 0,\n  easing: cubicInOut,\n  onStart: noop,\n  onDone: noop,\n  onAborting: noop,\n  scrollX: false,\n  scrollY: true\n};\n\nconst _scrollTo = options => {\n  let {\n    offset,\n    duration,\n    delay,\n    easing,\n    x=0,\n    y=0,\n    scrollX,\n    scrollY,\n    onStart,\n    onDone,\n    container,\n    onAborting,\n    element\n  } = options;\n\n  if (typeof offset === \"function\") {\n    offset = offset();\n  }\n\n  var cumulativeOffsetContainer = _.cumulativeOffset(container);\n  var cumulativeOffsetTarget = element\n    ? _.cumulativeOffset(element)\n    : { top: y, left: x };\n\n  var initialX = _.scrollLeft(container);\n  var initialY = _.scrollTop(container);\n\n  var targetX =\n    cumulativeOffsetTarget.left - cumulativeOffsetContainer.left + offset;\n  var targetY =\n    cumulativeOffsetTarget.top - cumulativeOffsetContainer.top + offset;\n\n  var diffX = targetX - initialX;\n\tvar diffY = targetY - initialY;\n\n  let scrolling = true;\n  let started = false;\n  let start_time = now() + delay;\n  let end_time = start_time + duration;\n\n  function scrollToTopLeft(element, top, left) {\n    if (scrollX) _.scrollLeft(element, left);\n    if (scrollY) _.scrollTop(element, top);\n  }\n\n  function start(delayStart) {\n    if (!delayStart) {\n      started = true;\n      onStart(element, {x, y});\n    }\n  }\n\n  function tick(progress) {\n    scrollToTopLeft(\n      container,\n      initialY + diffY * progress,\n      initialX + diffX * progress\n    );\n  }\n\n  function stop() {\n    scrolling = false;\n  }\n\n  loop(now => {\n    if (!started && now >= start_time) {\n      start(false)\n    }\n\n    if (started && now >= end_time) {\n      tick(1);\n      stop();\n      onDone(element, {x, y});\n    }\n\n    if (!scrolling) {\n      onAborting(element, {x, y});\n      return false;\n    }\n    if (started) {\n      const p = now - start_time;\n      const t = 0 + 1 * easing(p / duration);\n      tick(t);\n    }\n\n    return true;\n  });\n\n  start(delay);\n\n  tick(0);\n\n  return stop;\n};\n\nconst proceedOptions = options => {\n\tlet opts = _.extend({}, defaultOptions, options);\n  opts.container = _.$(opts.container);\n  opts.element = _.$(opts.element);\n  return opts;\n};\n\nconst scrollContainerHeight = containerElement => {\n  if (\n    containerElement &&\n    containerElement !== document &&\n    containerElement !== document.body\n  ) {\n    return containerElement.scrollHeight - containerElement.offsetHeight;\n  } else {\n    let body = document.body;\n    let html = document.documentElement;\n\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n  }\n};\n\nexport const setGlobalOptions = options => {\n\t_.extend(defaultOptions, options || {});\n};\n\nexport const scrollTo = options => {\n  return _scrollTo(proceedOptions(options));\n};\n\nexport const scrollToBottom = options => {\n  options = proceedOptions(options);\n\n  return _scrollTo(\n    _.extend(options, {\n      element: null,\n      y: scrollContainerHeight(options.container)\n    })\n  );\n};\n\nexport const scrollToTop = options => {\n  options = proceedOptions(options);\n\n  return _scrollTo(\n    _.extend(options, {\n      element: null,\n      y: 0\n    })\n  );\n};\n\nexport const makeScrollToAction = scrollToFunc => {\n  return (node, options) => {\n    let current = options;\n    const handle = e => {\n      e.preventDefault();\n      scrollToFunc(\n        typeof current === \"string\" ? { element: current } : current\n      );\n    };\n    node.addEventListener(\"click\", handle);\n    node.addEventListener(\"touchstart\", handle);\n    return {\n      update(options) {\n        current = options;\n      },\n      destroy() {\n        node.removeEventListener(\"click\", handle);\n        node.removeEventListener(\"touchstart\", handle);\n      }\n    };\n  };\n};\n\nexport const scrollto = makeScrollToAction(scrollTo);\nexport const scrolltotop = makeScrollToAction(scrollToTop);\nexport const scrolltobottom = makeScrollToAction(scrollToBottom);\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { readable } from 'svelte/store';\nconst patternTemplates = [\n    { name: \"Oseberg\", hash: \"MTA6MTk6MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDp8MSM4ZjU5MDIjOGY1OTAyIzhmNTkwMiM4ZjU5MDJ8MCNjMTdkMTEjYzE3ZDExI2MxN2QxMSNjMTdkMTF8MCNmZmZmYjcjZmZmZmI3I2ZmZmZiNyNmZmZmYjd8MSNjYzAwMDAjZmZmZmI3I2NjMDAwMCNjYzAwMDB8MSNmZmZmYjcjY2MwMDAwI2ZmZmZiNyNjYzAwMDB8MSNjYzAwMDAjZmZmZmI3I2NjMDAwMCNmZmZmYjd8MSNjYzAwMDAjY2MwMDAwI2ZmZmZiNyNjYzAwMDB8MCNmZmZmYjcjZmZmZmI3I2ZmZmZiNyNmZmZmYjd8MCNjMTdkMTEjYzE3ZDExI2MxN2QxMSNjMTdkMTF8MSM4ZjU5MDIjOGY1OTAyIzhmNTkwMiM4ZjU5MDI=\" },\n    { name: \"Widderhorn\", hash: \"MTQ6MTk6MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTExMDAxMTEwMDAwMDAxMTEwMDExMTAwMDAwMDExMTAwMTExMDAwMDAwMTExMDAxMTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDExMTAwMTExMDAwMDAwMTExMDAxMTEwMDAwMDAxMTEwMDExMTAwMDAwMDExMTAwMTExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA6fDEjMmUzNDM2IzJlMzQzNiMyZTM0MzYjMmUzNDM2fDAjMmUzNDM2IzJlMzQzNiMyZTM0MzYjMmUzNDM2fDEjZTBmOGZmI2UwZjhmZiNlMGY4ZmYjZTBmOGZmfDAjZTBmOGZmI2UwZjhmZiNmMGZjZmYjMmUzNDM2fDAjZjBmY2ZmI2YwZmNmZiMyZTM0MzYjMzQ2NWE0fDAjZmZmZmZmIzJlMzQzNiMzNDY1YTQjMmUzNDM2fDAjMmUzNDM2IzM0NjVhNCMyZTM0MzYjZmZmZmZmfDAjMzQ2NWE0IzJlMzQzNiNmZmZmZmYjMmUzNDM2fDEjMzQ2NWE0IzJlMzQzNiNmZmZmZmYjMmUzNDM2fDEjMjA0YTg3IzM0NjVhNCMyZTM0MzYjZmZmZmZmfDEjMjMxZDYyIzIwNGE4NyMyMDRhODcjMmUzNDM2fDEjMjMxZDYyIzIzMWQ2MiMyMzFkNjIjMjMxZDYyfDEjMmUzNDM2IzJlMzQzNiMyZTM0MzYjMmUzNDM2fDAjMmUzNDM2IzJlMzQzNiMyZTM0MzYjMmUzNDM2\" },\n    { name: \"Drachenköpfe\", hash: \"MjA6MjQ6MDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwMDAxMTExMTEwMDAwMDAwMDAwMDAwMDExMTExMTAwMDAwMDAwMDAwMDAwMTEwMDExMTExMTAwMDAwMDAwMDAxMTAwMTExMTExMDAwMDAwMDAwMDAwMTExMTExMDAxMTAwMDAwMDAwMDAxMTExMTEwMDExMDAwMDAwMDAwMDAwMDAxMTExMTEwMDAwMDAwMDAwMDAwMDExMTExMTAwMDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwMDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwMDAxMTExMTEwMDAwMDAwMDAwMDAwMDExMTExMTAwMDAwMDAwMDAwMDAwMTEwMDExMTExMTAwMDAwMDAwMDAxMTAwMTExMTExMDAwMDAwMDAwMDAwMTExMTExMDAxMTAwMDAwMDAwMDAxMTExMTEwMDExMDAwMDAwMDAwMDAwMDAxMTExMTEwMDAwMDAwMDAwMDAwMDExMTExMTAwMDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwOnwwI2E0MDAwMCNhNDAwMDAjYTQwMDAwI2E0MDAwMHwxI2VmMjkyOSNmNTc5MDAjZmNhZjNlI2ZmZDU5MXwwI2VmMjkyOSNmNTc5MDAjZmNhZjNlI2ZmZDU5MXwxI2E0MDAwMCNhNDAwMDAjYTQwMDAwI2E0MDAwMHwxI2NjMDAwMCNmY2U5NGYjY2MwMDAwI2ZjZTk0ZnwxI2ZjZTk0ZiNjYzAwMDAjZmNlOTRmI2VmMjkyOXwxI2NjMDAwMCNmY2U5NGYjY2MwMDAwI2ZjZTk0ZnwxI2ZjZTk0ZiNjYzAwMDAjZmNlOTRmI2NjMDAwMHwxI2NjMDAwMCNmY2U5NGYjY2MwMDAwI2ZjZTk0ZnwxI2ZjZTk0ZiNjYzAwMDAjZmNlOTRmI2NjMDAwMHwxI2NjMDAwMCNmY2U5NGYjY2MwMDAwI2ZjZTk0ZnwxI2ZjZTk0ZiNjYzAwMDAjZmNlOTRmI2NjMDAwMHwxI2NjMDAwMCNmY2U5NGYjY2MwMDAwI2ZjZTk0ZnwxI2ZjZTk0ZiNjYzAwMDAjZmNlOTRmI2NjMDAwMHwxI2NjMDAwMCNmY2U5NGYjZWYyOTI5I2ZjZTk0ZnwxI2ZjZTk0ZiNjYzAwMDAjZmNlOTRmI2NjMDAwMHwwI2E0MDAwMCNhNDAwMDAjYTQwMDAwI2E0MDAwMHwxI2VmMjkyOSNmNTc5MDAjZmNhZjNlI2ZmZDU5MXwwI2VmMjkyOSNmNTc5MDAjZmNhZjNlI2ZmZDU5MXwxI2E0MDAwMCNhNDAwMDAjYTQwMDAwI2E0MDAwMA==\" },\n    { name: \"Sulawesi\", hash: \"MjA6Njg6MDAwMTEwMDAwMTEwMDAwMTEwMDAwMDEwMDExMTExMTExMTEwMDEwMDAwMDExMDAwMTExMTAwMDExMDAwMDAxMTExMTAxMTExMDExMTExMDAwMDExMTEwMTAwMDAxMDExMTEwMDAwMTExMTAxMDAwMDEwMTExMTAwMDAxMTAwMTAxMTExMDEwMDExMDAwMDExMDAxMDExMTEwMTAwMTEwMDAwMTEwMDEwMDAwMDAxMDAxMTAwMDAxMTAwMTAwMDAwMDEwMDExMDAwMDAwMDAxMDExMTEwMTAwMDAwMDAwMDAwMDEwMTExMTAxMDAwMDAwMDAwMDAwMTAxMTExMDEwMDAwMDAwMDAwMDAxMDExMTEwMTAwMDAwMDAwMDAwMDEwMTExMTAxMDAwMDAwMDAwMDAwMTAxMTExMDEwMDAwMDAwMDExMDAxMDExMTEwMTAwMTEwMDAwMTEwMDEwMTExMTAxMDAxMTAwMDAxMTAwMDEwMDAwMDEwMDExMDAwMDExMDAwMTAwMDAwMTAwMTEwMDAwMTEwMDAxMDAxMTEwMTEwMDAwMDAxMTAwMDEwMDExMTAxMTAwMDAwMDAwMTExMDAwMDAxMDExMDAwMDAwMDAxMTEwMDAwMDEwMTEwMDAwMDAwMDExMDExMTAwMTAxMTAwMDAwMDAwMTEwMTExMDAxMDExMDAwMDAwMDAxMTEwMTEwMDAxMDAxMTAwMDAwMDExMTAxMTAwMDEwMDExMDAwMDAwMTExMDExMDAwMTAwMTEwMDAwMDAxMTEwMTEwMDAxMDAxMTAwMDAxMTAwMTAxMTAwMDEwMDExMDAwMDExMDAxMDExMDAwMTAwMTEwMDAwMTEwMDEwMTExMTEwMDAxMTAwMDAxMTAwMTAxMTExMTAwMDExMDAwMDExMDAxMDAwMTEwMTExMDAwMDAwMTEwMDEwMDAxMTAxMTEwMDAwMDAwMDExMDExMTExMDExMTAwMDAwMDAwMTEwMTExMTEwMTExMDAwMDAwMDAxMTAxMDAwMDEwMTEwMDAwMDAwMDExMDEwMDAwMTAxMTAwMDAwMDAwMTEwMTAwMDAxMDExMDAwMDAwMDAxMTAxMDAwMDEwMTEwMDAwMDAxMTExMDEwMDAwMTAxMTExMDAwMDExMTEwMTAwMDAxMDExMTEwMDAwMTExMTAxMDAwMDEwMTExMTAwMDAxMTExMDEwMDAwMTAxMTExMDAwMDAwMTEwMTExMTExMDExMDAwMDAwMDAxMTAxMTExMTEwMTEwMDAwMDAwMDExMDEwMDAwMTAxMTAwMDAwMDAwMTEwMTAwMDAxMDExMDAwMDAwMDAwMDEwMTExMTAxMDAwMDAwMDAwMDAwMTAxMTExMDEwMDAwMDAwMDAwMDAwMTAwMDAxMDAwMDAwMDAwMTAwMTExMDAwMDExMTAwMTAwMDAwMTEwMDAwMDAwMDAwMTEwMDAwMDEwMDExMTEwMDExMTEwMDEwMDAwMDExMDAwMDExMDAwMDExMDAwMDAxMDAxMTExMTExMTExMDAxMDAwMDAxMTAwMDExMTEwMDAxMTAwMDAwMTExMTEwMTExMTAxMTExMTAwMDAxMTExMDEwMDAwMTAxMTExMDAwMDExMTEwMTAwMDAxMDExMTEwMDAwMTEwMDEwMTExMTAxMDAxMTAwMDAxMTAwMTAxMTExMDEwMDExMDAwMDExMDAxMDAwMDAwMTAwMTEwMDAwMTEwMDEwMDAwMDAxMDAxMTAwMDAwMDAwMTAxMTExMDEwMDAwMDAwMDAwMDAxMDExMTEwMTAwMDAwMDp8MSMwNjZhMDAjMDY2YTAwIzA2NmEwMCMwNjZhMDB8MCMwNjZhMDAjMDY2YTAwIzA2NmEwMCMwNjZhMDB8MSM3M2QyMTYjMDY2YTAwIzRlOWEwNiNjYmZmYzR8MSMwNjZhMDAjNGU5YTA2I2NiZmZjNCM3M2QyMTZ8MCMwNjZhMDAjNzNkMjE2I2NiZmZjNCM0ZTlhMDZ8MCM0ZTlhMDYjMDY2YTAwIzczZDIxNiNjYmZmYzR8MSM3M2QyMTYjMDY2YTAwIzRlOWEwNiNjYmZmYzR8MCM0ZTlhMDYjMDY2YTAwIzczZDIxNiNjYmZmYzR8MSM3M2QyMTYjMDY2YTAwIzRlOWEwNiNjYmZmYzR8MSMwNjZhMDAjNGU5YTA2I2NiZmZjNCM3M2QyMTZ8MCMwNjZhMDAjNzNkMjE2I2NiZmZjNCM0ZTlhMDZ8MCM0ZTlhMDYjMDY2YTAwIzczZDIxNiNjYmZmYzR8MSM3M2QyMTYjMDY2YTAwIzRlOWEwNiNjYmZmYzR8MCM0ZTlhMDYjMDY2YTAwIzczZDIxNiNjYmZmYzR8MSM3M2QyMTYjMDY2YTAwIzRlOWEwNiNjYmZmYzR8MSMwNjZhMDAjNGU5YTA2I2NiZmZjNCM3M2QyMTZ8MCMwNjZhMDAjNzNkMjE2I2NiZmZjNCM0ZTlhMDZ8MCM0ZTlhMDYjMDY2YTAwIzczZDIxNiNjYmZmYzR8MSMwNjZhMDAjMDY2YTAwIzA2NmEwMCMwNjZhMDB8MCMwNjZhMDAjMDY2YTAwIzA2NmEwMCMwNjZhMDA=\" },\n    { name: \"Einzugsmuster Raute\", hash: \"MjA6MjM6MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMTExMTExMTExMTExMTExMDAwMDExMTExMTExMTExMTExMTEwMDAwMTExMTExMTExMTExMTExMTAwMDAxMTExMTExMTExMTExMTExMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTExMTExMTExMTExMTExMTAwMDAxMTExMTExMTExMTExMTExMDAwMDExMTExMTExMTExMTExMTEwMDAwMTExMTExMTExMTExMTExMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDExMTExMTExMTExMTExMTEwMDAwMTExMTExMTExMTExMTExMTAwMDAxMTExMTExMTExMTExMTExMDAwMDExMTExMTExMTExMTExMTEwMDp8MSNmY2U5NGYjZmNlOTRmI2ZjZTk0ZiNmY2U5NGZ8MCNmY2U5NGYjZmNlOTRmI2ZjZTk0ZiNmY2U5NGZ8MCM4MzAwOTgjODMwMDk4IzgzMDA5OCNmY2U5NGZ8MCM4MzAwOTgjODMwMDk4I2ZjZTk0ZiM4MzAwOTh8MCM4MzAwOTgjZmNlOTRmIzgzMDA5OCM4MzAwOTh8MCNmY2U5NGYjODMwMDk4IzgzMDA5OCNmYTAwZmZ8MSNmY2U5NGYjODMwMDk4IzgzMDA5OCNmYTAwZmZ8MSM4MzAwOTgjZmNlOTRmIzgzMDA5OCM4MzAwOTh8MSM4MzAwOTgjODMwMDk4I2ZjZTk0ZiM4MzAwOTh8MSNmYTAwZmYjODMwMDk4IzgzMDA5OCNmY2U5NGZ8MCNmYTAwZmYjODMwMDk4IzgzMDA5OCNmY2U5NGZ8MCM4MzAwOTgjODMwMDk4I2ZjZTk0ZiM4MzAwOTh8MCM4MzAwOTgjZmNlOTRmIzgzMDA5OCM4MzAwOTh8MCNmY2U5NGYjODMwMDk4IzgzMDA5OCNmYTAwZmZ8MSNmY2U5NGYjODMwMDk4IzgzMDA5OCNmYTAwZmZ8MSM4MzAwOTgjZmNlOTRmIzgzMDA5OCM4MzAwOTh8MSM4MzAwOTgjODMwMDk4I2ZjZTk0ZiM4MzAwOTh8MSM4MzAwOTgjODMwMDk4IzgzMDA5OCNmY2U5NGZ8MSNmY2U5NGYjZmNlOTRmI2ZjZTk0ZiNmY2U5NGZ8MCNmY2U5NGYjZmNlOTRmI2ZjZTk0ZiNmY2U5NGY=\" },\n    { name: \"Birka 6\", hash: \"MTM6MTk6MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAxMTAwMDAwMDAwMDExMTExMTExMTAwMDAxMTExMTExMTEwMDAwMTEwMDExMTExMDAwMDExMDAxMTExMTAwMDAwMDAwMTExMDAwMDAwMDAwMDExMTAwMDAwMDAwMDAxMDAwMDAwMDAwMDAwMTAwMDAwMDAwMTExMTAwMDExMDAwMDExMTEwMDAxMTAwMDAxMTExMDExMTEwMDAwMTExMTAxMTExMDAwMDExMTExMTExMTAwMDAxMTExMTExMTEwMDp8MCMyZTM0MzYjMmUzNDM2IzJlMzQzNiMyZTM0MzZ8MCMyZTM0MzYjMmUzNDM2IzJlMzQzNiMyZTM0MzZ8MCMyZTM0MzYjZmNlOTRmI2ZjZTk0ZiMyZTM0MzZ8MCNmY2U5NGYjZmNlOTRmIzJlMzQzNiMyZTM0MzZ8MCNmY2U5NGYjMmUzNDM2IzJlMzQzNiNmY2U5NGZ8MCMyZTM0MzYjMmUzNDM2I2ZjZTk0ZiNmY2U5NGZ8MSMyZTM0MzYjZmNlOTRmI2ZjZTk0ZiMyZTM0MzZ8MSMyZTM0MzYjMmUzNDM2I2ZjZTk0ZiNmY2U5NGZ8MSNmY2U5NGYjMmUzNDM2IzJlMzQzNiNmY2U5NGZ8MSNmY2U5NGYjZmNlOTRmIzJlMzQzNiMyZTM0MzZ8MSMyZTM0MzYjZmNlOTRmI2ZjZTk0ZiMyZTM0MzZ8MSMyZTM0MzYjMmUzNDM2IzJlMzQzNiMyZTM0MzZ8MSMyZTM0MzYjMmUzNDM2IzJlMzQzNiMyZTM0MzY=\" },\n    { name: \"Hallstatt 123\", hash: \"MTk6NzI6MDAwMDAxMTEwMDExMTEwMDAwMDAwMDAwMTExMTAwMTExMDAwMDAwMDAwMDExMTExMDAxMTAxMDAwMDAwMDAxMTExMTEwMDExMDAwMDAwMDAwMTExMTExMTAwMTEwMDAwMDAwMDExMTAwMDExMDAxMDAwMDAwMDAxMTEwMDAxMTEwMDAwMDAwMDExMTExMDAwMTExMTAwMDAwMDAxMTExMTAwMDExMTExMDAwMDAwMTExMTEwMDAxMTExMTAwMDAwMDAxMTExMDAwMTExMTEwMDAwMDAwMDExMTAwMDExMTAwMDAwMDAwMTAwMTEwMDAxMTEwMDAwMDAwMDExMDAxMTExMTExMDAwMDAwMDAwMTEwMDExMTExMTAwMDAwMDAwMTAxMTAwMTExMTEwMDAwMDAwMDAwMTExMDAxMTExMDAwMDAwMDAwMDExMTEwMDExMTAwMDAwMDAwMDAxMTExMTAwMTEwMTAwMDAwMDExMTExMTExMDAxMTAwMDAwMDAxMTExMTExMTEwMDExMDAwMDAwMDAwMDAwMTExMTAwMTAwMDAwMDAwMDAwMDExMTExMDAwMDAwMDAwMDAwMDAxMTExMTEwMDAwMDAwMDAwMDExMDAwMTExMTAwMDAwMDAwMDAxMTAwMDExMTEwMDAwMDAwMDAwMTEwMDAxMTExMDAwMDAwMTExMTAwMTExMDAwMDAwMDAwMDExMTEwMDExMTAwMDAwMDAwMDAxMTExMDAxMTEwMDAwMDAwMDAwMTExMTExMDAwMDAwMTAwMDAwMDExMTExMTAwMDAwMTEwMDAwMDAxMTExMTEwMDAwMTEwMDAwMDAwMDAwMDAwMDAwMTEwMDAwMDAwMDAwMDAwMDAwMTEwMDEwMDAwMDAxMTAwMDAwMTEwMDEwMDAwMDAwMTEwMDAwMTEwMDAxMTAwMDAwMDExMDAwMTEwMDAwMTEwMDAwMDAwMTAwMTEwMDAwMDExMDAwMDAwMTAwMTEwMDAwMDAxMTAwMDAwMDAwMTEwMDAwMDAwMTEwMDAwMDAwMTEwMDExMTAwMDExMDAwMDAwMTEwMDAxMTEwMDAxMTAwMDAwMDEwMDAwMTExMDAwMDAwMDAwMDAwMDAwMDExMTAwMDAwMDAwMDAwMDAwMDAxMTEwMDAwMDAwMDAwMDAwMDAwMTExMDAwMDEwMDAwMDAxMTAwMDExMTAwMDExMDAwMDAwMTEwMDAxMTEwMDExMDAwMDAwMDExMDAwMDAwMDExMDAwMDAwMDAxMTAwMDAwMDExMDAxMDAwMDAwMTEwMDAwMDExMDAxMDAwMDAwMDExMDAwMDExMDAwMTEwMDAwMDAxMTAwMDExMDAwMDExMDAwMDAwMDEwMDExMDAwMDAxMTAwMDAwMDEwMDExMDAwMDAwMDAwMDAwMDAwMDExMDAwMDAwMDAwMDAwMDAwMDExMDAwMDExMTExMTAwMDAwMDExMDAwMDAxMTExMTEwMDAwMDAxMDAwMDAwMTExMTExMDAwMDAwMDAwMDExMTAwMTExMTAwMDAwMDAwMDAxMTEwMDExMTEwMDAwMDAwMDAwMTExMDAxMTExMDAwMDAwMTExMTAwMDExMDAwMDAwMDAwMDExMTEwMDAxMTAwMDAwMDAwMDAxMTExMDAwMTEwMDAwMDAwMDAwMDExMTExMTAwMDAwMDAwMDAwMDAwMTExMTEwMDAwMDAwMDAwMDAxMDAxMTExMDAwMDAwMDAwMDAwMTEwMDExMTExMTExMTAwMDAwMDAxMTAwMTExMTExMTEwMDAwMDAxMDExMDAxMTExMTAwMDAwOnwxIzAwMTJmZiMwMDEyZmYjMDAxMmZmIzAwMTJmZnwxIzAwMTJmZiMwMDEyZmYjMDAxMmZmIzAwMTJmZnwxI2NjMDAwMCNjYzAwMDAjY2MwMDAwI2NjMDAwMHwwI2ZmZmZmZiMwMDEyZmYjMDAxMmZmI2ZmZmZmZnwwIzAwMTJmZiMwMDEyZmYjZmZmZmZmI2ZmZmZmZnwwI2ZmZmZmZiMwMDEyZmYjMDAxMmZmI2ZmZmZmZnwwIzAwMTJmZiMwMDEyZmYjZmZmZmZmI2ZmZmZmZnwwI2NjMDAwMCNmZmZmZmYjZmZmZmZmI2NjMDAwMHwwI2NjMDAwMCNjYzAwMDAjZmZmZmZmI2ZmZmZmZnwwI2ZmZmZmZiNjYzAwMDAjY2MwMDAwI2ZmZmZmZnwwI2NjMDAwMCNjYzAwMDAjZmZmZmZmI2ZmZmZmZnwwI2NjMDAwMCNmZmZmZmYjZmZmZmZmI2NjMDAwMHwwI2ZmZmZmZiNmZmZmZmYjMDAxMmZmIzAwMTJmZnwwI2ZmZmZmZiMwMDEyZmYjMDAxMmZmI2ZmZmZmZnwwI2ZmZmZmZiNmZmZmZmYjMDAxMmZmIzAwMTJmZnwwI2ZmZmZmZiMwMDEyZmYjMDAxMmZmI2ZmZmZmZnwwI2NjMDAwMCNjYzAwMDAjY2MwMDAwI2NjMDAwMHwwIzAwMTJmZiMwMDEyZmYjMDAxMmZmIzAwMTJmZnwwIzAwMTJmZiMwMDEyZmYjMDAxMmZmIzAwMTJmZg==\" },\n    { name: \"Dublin Dragons\", hash: \"MTg6MjQ6MDAwMDAxMTExMTEwMDExMDAwMDAwMDAxMTExMTEwMDExMDAwMDAwMDAwMDAwMTExMTExMDAwMDAwMDAwMDAwMTExMTExMDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwMTExMTExMDAwMDAwMDAwMDAwMTExMTExMDAwMDAwMDAwMDAwMTEwMDExMTExMTAwMDAwMDAwMTEwMDExMTExMTAwMDAwMDAwMDAxMTExMTEwMDExMDAwMDAwMDAxMTExMTEwMDExMDAwMDAwMDAwMDAwMTExMTExMDAwMDAwMDAwMDAwMTExMTExMDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMTEwMDAwMDAxMTAwMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwMDAxMTAwMDAwMDExMDAwMDAwMTExMTExMDAwMDAwMDAwMDAwMTExMTExMDAwMDAwMDAwMDAwMTEwMDExMTExMTAwMDAwMDAwMTEwMDExMTExMTAwMDAwOnwxIzAwMDAwMCMwMDAwMDAjMDAwMDAwIzAwMDAwMHwxI2VmMjkyOSNlZjI5MjkjZWYyOTI5I2VmMjkyOXwxIzAwMDAwMCMwMDAwMDAjMDAwMDAwIzAwMDAwMHwxI2ZmZmZmZiNmY2U5NGYjZmZmZmZmI2VmMjkyOXwxI2VmMjkyOSNmZmZmZmYjZmNlOTRmI2ZmZmZmZnwxI2ZmZmZmZiNlZjI5MjkjZmZmZmZmI2ZjZTk0ZnwxI2ZjZTk0ZiNmZmZmZmYjZWYyOTI5I2ZmZmZmZnwxI2ZmZmZmZiNmY2U5NGYjZmZmZmZmI2VmMjkyOXwxI2VmMjkyOSNmZmZmZmYjZmNlOTRmI2ZmZmZmZnwxI2ZmZmZmZiNlZjI5MjkjZmZmZmZmI2ZjZTk0ZnwxI2ZjZTk0ZiNmZmZmZmYjZWYyOTI5I2ZmZmZmZnwxI2ZmZmZmZiNmY2U5NGYjZmZmZmZmI2VmMjkyOXwxI2VmMjkyOSNmZmZmZmYjZmNlOTRmI2ZmZmZmZnwxI2ZmZmZmZiNlZjI5MjkjZmZmZmZmI2ZjZTk0ZnwxI2ZjZTk0ZiNmZmZmZmYjZWYyOTI5I2ZmZmZmZnwwIzAwMDAwMCMwMDAwMDAjMDAwMDAwIzAwMDAwMHwwI2VmMjkyOSNlZjI5MjkjZWYyOTI5I2VmMjkyOXwwIzAwMDAwMCMwMDAwMDAjMDAwMDAwIzAwMDAwMA==\" }\n];\nexport const templates = readable(patternTemplates);\n","<script lang=\"ts\">\n\timport { appConfig } from '../stores/appConfig.js';\n\timport { templates } from '../stores/patternTemplates.js';\n</script>\n\n<nav class=\"uk-navbar-container\" uk-navbar>\n    <div class=\"uk-navbar-center\">\n        Brettchenweben\n\t</div>\n    <div class=\"uk-navbar-right\">\n        <ul class=\"uk-navbar-nav\">\n            <li>\n                <a href={'#'}>Vorlagen</a>\n                <div class=\"uk-navbar-dropdown\">\n                    <ul class=\"uk-nav uk-navbar-dropdown-nav\">\n                    \t{#each $templates as template, index (index)}\n\t                        <li><a href=\"?{(new Date()).getTime()}#{template.hash}\">{template.name}</a></li>\n                    \t{/each}\n                    </ul>\n                </div>\n            </li>\n            <li>\n                <a href={'#'}>Anzeige</a>\n                <div class=\"uk-navbar-dropdown\">\n                    <ul class=\"uk-nav uk-navbar-dropdown-nav\">\n                    \t<li class=\"uk-nav-header\">Vorschau Gewebe</li>\n                        <li>\n                        \tGröße:\n                        \t<input class=\"uk-range\" type=\"range\" min=\"1\" max=\"3\" step=\"1\" bind:value={$appConfig.weaveSize} />\n                    \t</li>\n                    \t<li>\n                    \t\tFadenumrisse:\n                    \t\t<input class=\"uk-input\" type=\"color\" bind:value={$appConfig.weaveBorderColor}/>\n                    \t</li>\n                    \t<li>\n                \t\t\tSchussfaden:\n\t\t    \t\t\t\t<input class=\"uk-input\" type=\"color\" bind:value={$appConfig.weftColor} />\n                    \t</li>\n                    </ul>\n                </div>\n            </li>\n            <li>\n            \t<a href=\"https://www.youtube.com/watch?v=zJmZp41ZnEk\" target=\"blank\">\n            \t\t<span class=\"uk-icon\" uk-icon=\"icon: youtube\"></span>\n            \t</a>\n            </li>\n            <li>\n            \t<a href=\"https://github.com/resah/tablet-weaving\" target=\"blank\">\n            \t\t<span class=\"uk-icon uk-margin-small-right\" uk-icon=\"icon: github\"></span>\n            \t</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n<style>\n\t.uk-navbar-nav > li > a {\n\t\tmin-height: 50px;\n\t}\n\tinput {\n\t\tborder: 0;\n\t}\n\t\n\t@media print {\n\t\t.uk-navbar-container {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let thread: Thread;\n</script>\n\n<div class=\"thread\" \n\tuk-tooltip=\"Farbe wählen\"\n\tstyle=\"--backgroundColor: {thread.color}\">\n\t<input type=\"color\" bind:value={thread.color} />\n</div>\n\n<style>\n\t@media all {\n\t\t.thread {\n\t\t\theight: 25px;\n\t\t\tmargin: 1px 0;\n\t\t\tbackground-color: var(--backgroundColor) !important;\n\t\t}\n\t\tinput {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t\tborder: 0;\n\t\t\tborder-radius: 0;\n\t\t}\n\t\tinput[type=\"color\"]::-moz-color-swatch {\n\t\t\toutline: none;\n\t\t\tborder: 0 transparent;\n\t\t}\n\t\tinput[type=\"color\"]::-webkit-color-swatch {\n\t\t\toutline: none;\n\t\t\tborder: 0 transparent;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n    import Thread from \"./Thread.svelte\";\n    \n    export let index: number;\n    export let tablet: Tablet;\n\t\n\tconst toggleDirection = () => {\n\t\ttablet.sDirection = !tablet.sDirection;\n\t}\n    \n</script>\n\n<div class=\"tablet uk-flex-auto\">\n\t<div class=\"tabletIndex uk-text-center\" uk-tooltip=\"Brettchen #{index + 1}\">\n\t\t{#if index < 9}&nbsp;{/if}{index + 1}\n\t</div>\n\t\n\t{#each tablet.threads as thread, index (index)}\n\t\t<Thread bind:thread/>\n\t{/each}\n\t\n\t<div class=\"threadDirection\">\n\t\t<button on:click={toggleDirection} uk-tooltip=\"Schärung umkehren\">\n\t\t\t{#if tablet.sDirection}\n\t\t\t  S\n\t\t\t{:else}\n\t\t\t  Z\n\t\t\t{/if}\n\t\t</button> \n\t</div>\n</div>\n\n<style>\n\t@media all {\n\t\t.tablet {\n\t\t\tborder: 1px solid black;\n\t\t\tmargin-right: 2px;\n\t\t\tmax-width: 30px;\n\t\t}\n\t\t.tabletIndex {\n\t\t\theight: 20px;\n\t\t\tbackground-color: white;\n\t\t\tborder-bottom: 1px solid black;\n\t\t}\n\t\t.threadDirection {\n\t\t\theight: 25px;\n\t\t\tbackground-color: lightgray;\n\t\t\tborder-top: 1px solid black;\n\t\t\ttext-align: center;\n\t\t}\n\t\t.threadDirection button {\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t\tborder: 0;\n\t\t\tbackground-color: lightgray;\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { appConfig } from '../stores/appConfig.js';\n\timport { tablets, weaveLength } from '../stores/stores.js';\n    \n    let showColors = false;\n    \n\tconst updateColor = (event, color) => {\n\t\t$tablets = $tablets.map((tablet: Tablet) => {\n\t\t\ttablet.threads = tablet.threads.map((thread) => {\n\t\t\t\tthread.color = thread.color.replace(color, event.target.value);\n\t\t\t\treturn thread;\n\t\t\t});\n\t\t\treturn tablet;\n\t\t});\n\t}\n</script>\n\n<div class=\"uk-text-center\">\n\t{#if showColors}\n    \t<button type=\"button\" class=\"uk-button uk-button-link\" on:click={() => showColors = false}><span uk-icon=\"icon: chevron-down\">Fadenübersicht</button>\n\t    <table class=\"uk-table uk-table-small uk-table-divider uk-background-default yarnLengths\">\n\t    \t<tr>\n\t    \t\t<td></td>\n\t    \t\t<td><input type=\"color\" bind:value={$appConfig.weftColor} uk-tooltip=\"Schussfaden\" class=\"weftColor\" /><br></td>\n\t        \t{#each $weaveLength.yarnLengths as wl, index (index)}\n\t        \t\t<td class=\"uk-text-right\">\n\t        \t\t\t{ wl.count } x <input type=\"color\" uk-tooltip={wl.color} value={wl.color} on:change={(e) => updateColor(e, wl.color)} />\n\t        \t\t</td>\n\t    \t\t{/each}\n\t    \t</tr>\n\t    \t<tr>\n\t    \t\t<td class=\"uk-text-left\">Länge: <input class=\"uk-input uk-form-small uk-form-width-xsmall\" type=\"text\" bind:value={$appConfig.weaveLength} />cm</td>\n\t    \t\t<td></td>\n\t        \t{#each $weaveLength.yarnLengths as wl, index (index)}\n\t        \t\t<td class=\"uk-text-right\">{wl.yarnLength}</td>\n\t    \t\t{/each}\n\t    \t</tr>\n\t    </table>\n\t    <table class=\"uk-table uk-table-small uk-table-divider uk-background-default uk-text-left singleYarnLength\">\n\t    \t<tr>\n\t    \t\t<td class=\"uk-text-meta\">Webzugabe: +20%</td>\n\t    \t\t<td class=\"uk-text-meta\">Zugabe Brettchen: +50cm</td>\n\t    \t\t<td class=\"uk-text-meta uk-text-right\">= {$weaveLength.singleYarnLength}cm / Faden</td>\n\t    \t</tr>\n\t    </table>\n\t{:else}\n\t\t<button type=\"button\" class=\"uk-button uk-button-link\" on:click={() => showColors = true}><span uk-icon=\"icon: chevron-right\">Fadenübersicht</button>\n\t{/if}\n</div>\n\n<style>\n\t@media all {\n\t\tinput[type=\"color\"] {\n\t\t\tborder: 0;\n\t\t\tpadding: 0;\n\t\t\tmargin: 5px 0px 5px 10;\n\t\t\tborder: 1px solid black;\n\t\t\tbackground-color: transparent;\n\t\t}\n\t\tinput[type=\"color\"]::-moz-color-swatch {\n\t\t\toutline: none;\n\t\t\tborder: 0 transparent;\n\t\t}\n\t\tinput[type=\"color\"]::-webkit-color-swatch {\n\t\t\toutline: none;\n\t\t\tborder: 0 transparent;\n\t\t}\n\t\tinput.weftColor {\n\t\t\tborder: 4px solid #AAAAAA !important;\n\t\t}\n\t\t\n\t\t.yarnLengths {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t\t.singleYarnLength,\n\t\t.singleYarnLength td {\n\t\t\tmargin-top: 0;\n\t\t\tpadding-top: 0;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { tablets } from '../stores/stores.js';\n    import Tablet from \"./Tablet.svelte\";\n    import Summary from \"./Summary.svelte\";\n    \n    let showColors = false;\n    \n\tconst addTablet = (event) => {\n\t\ttablets.update(t => {\n\t\t\tconst lastTablet = t[t.length - 1];\n\t\t\tconst newTablet: Tablet = {\n\t\t\t\tsDirection: lastTablet.sDirection, \n\t\t\t\tholes: 4,\n\t\t\t\tthreads: lastTablet.threads.map(hole => {\n\t\t\t\t\treturn { color: hole.color };\n\t\t\t\t})\n\t\t\t};\n\t\t\tt.push(newTablet);\n\t\t\treturn t;\n\t\t});\n\t}\n\t\n\tconst removeTablet = (event) => {\n\t\tif ($tablets.length > 1) {\n\t\t\ttablets.update(t => {\n\t\t\t\tt.pop();\n\t\t\t\treturn t;\n\t\t\t});\n\t\t}\n\t}\n\t\n</script>\n\n<div class=\"uk-flex uk-flex-around uk-flex-wrap uk-flex-middle\">\n\t<div>\n\t\t<img src=\"assets/tablet-4-holes.svg\" alt=\"Tablet hole index description: A = top front; B - bottom front; C - bottom back; D - top back\"/>\n\t</div>\n    \n\t<div class=\"uk-flex uk-flex-center uk-flex-row uk-flex-auto\">\n    \t<div class=\"holes uk-flex-auto\">\n        \t{#each $tablets[0].threads as holes, index (index)}\n        \t\t<div class=\"holeIndex\">\n        \t\t\t{String.fromCharCode(65 + index)}\n        \t\t</div>\n    \t\t{/each}\n\t\t</div>\n\n\t\t{#each $tablets as tablet, index (index)}\n\t\t\t<Tablet index={index} bind:tablet/>\n\t\t{/each}\n\t</div>\t\t        \n\t\n    <div>\n    \t<button class=\"uk-icon-button uk-button-secondary uk-button-large uk-width-small uk-margin-small-bottom \" uk-icon=\"plus\" \n    \t\ton:click|preventDefault={addTablet}\n    \t\tuk-tooltip=\"Brettchen hinzufügen\"></button><br>\n    \t<button class=\"uk-icon-button uk-button-secondary uk-button-large uk-width-small\" uk-icon=\"minus\" \n    \t\ton:click|preventDefault={removeTablet}\n    \t\tuk-tooltip=\"Brettchen entfernen\"></button>\n    </div>\n</div>\n<div class=\"uk-flex uk-flex-around uk-flex-wrap uk-flex-middle uk-margin-small-top\">\n\t<div></div>\n\t<Summary />\n\t<div></div>\n</div>\n\n<style>\n\t@media all {\n\t\t.holes {\n\t\t\tmargin-right: 2px;\n\t\t\tmax-width: 50px;\n\t\t\tpadding-top: 22px;\n\t\t}\n\t\t.holeIndex {\n\t\t\theight: 19px;\n\t\t\tmargin: 1px 0;\n\t\t\tpadding: 2px;\n\t\t\tbackground-color: white !important;\n\t\t\ttext-align: center;\n\t\t\tborder: 1px solid black !important;\n\t\t}\n\t}\n\t\n\t@media print {\n\t    img, button {\n\t      display: none;\n\t    }\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { appConfig } from '../stores/appConfig.js';\n\timport type { Weave } from '../model/weave.type';\n\n\texport let tabletIndex: number;\n\texport let weaveRow: number;\n\texport let weave: Weave;\n\texport let classNames: string = '';\n</script>\n\n<div class=\"weave weaveSize{$appConfig.weaveSize} {classNames}\"\n\tuk-tooltip=\"{tabletIndex + 1}, {weaveRow + 1}\" \n\tclass:sDirection={weave.sDirection} \n\tstyle=\"--backgroundColor: {weave.color}; --borderColor: {$appConfig.weaveBorderColor}\">\n</div>\n\n<style>\n\t@media all {\n\t\t.weave {\n\t\t\tmargin-top: -25px;\n\t\t\tborder: 1px solid #AAAAAA;\n\t\t\tbackground-color: var(--backgroundColor) !important;\n\t\t\tborder-color: var(--borderColor) !important;\n\t\t}\n\t\n\t\t.weaveSize1 {\n\t\t\twidth: 7px;\n\t\t\theight: 30px;\n\t\t\ttransform: skew(0, -40deg);\n\t\t}\n\t\t.weaveSize1.sDirection {\n\t\t\ttransform: skew(0, 40deg);\n\t\t}\n\t\t.weaveSize2 {\n\t\t\twidth: 10px;\n\t\t\theight: 35px;\n\t\t\ttransform: skew(0, -50deg);\n\t\t}\n\t\t.weaveSize2.sDirection {\n\t\t\ttransform: skew(0, 50deg);\n\t\t}\n\t\t.weaveSize3 {\n\t\t\twidth: 13px;\n\t\t\theight: 45px;\n\t\t\ttransform: skew(0, -60deg);\n\t\t}\n\t\t.weaveSize3.sDirection {\n\t\t\ttransform: skew(0, 60deg);\n\t\t}\n\t\t\n\t\t.final {\n\t\t\tbackground-color: #FFFFFF;\n\t\t\tborder-left-color: #FFFFFF;\n\t\t\tborder-right-color: #FFFFFF;\n\t\t\tborder-bottom: 0;\n\t\t\theight: auto;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { appConfig } from '../stores/appConfig.js';\n    import ThreadWeave from \"./ThreadWeave.svelte\";\n\timport type { Weave } from '../model/weave.type';\n    \n    export let weaves: Weave[];\n    export let tabletIndex: number;\n    \n    const final: Weave = {\n\t\tcolor: '#ffffff',\n\t\tsDirection: true\n\t};\n</script>\n\n<div class=\"tablet weaveSize{$appConfig.weaveSize}\">\n\t{#each weaves as weave, index (index)}\n\t\t<ThreadWeave weave={weave} tabletIndex={tabletIndex} weaveRow={index} />\n\t{/each}\n\t<ThreadWeave tabletIndex={tabletIndex} weaveRow={weaves.length} weave={final} classNames=\"final\"/>\n</div>\n\n<style>\n\t@media all {\n\t\t.tablet {\n\t\t\tfloat: left;\n\t\t}\n\t\t.tablet.weaveSize1 {\n\t\t\twidth: 8px;\n\t\t}\n\t\t.tablet.weaveSize2 {\n\t\t\twidth: 11px;\n\t\t}\n\t\t.tablet.weaveSize3 {\n\t\t\twidth: 14px;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { appConfig } from '../stores/appConfig.js';\n\timport { weaveRows } from '../stores/stores.js';\n    import TabletWeave from \"./TabletWeave.svelte\";\n\timport type { Weave } from '../model/weave.type';\n    \n    export let weavePattern: Weave[][];\n</script>\n\n<div class=\"uk-flex uk-flex-center\">\n\t<div class=\"tabletWeaveIndices weaveSize{$appConfig.weaveSize} uk-text-small\">\n    \t{#each [...Array($weaveRows).keys()] as key, index (index)}\n    \t\t<div class=\"tabletWeaveIndex {index % 2 ? 'even' : 'odd'}\">\n    \t\t\t{index + 1}\n    \t\t</div>\n\t\t{/each}\n\t</div>\n\t\n\t{#each weavePattern as tablet, index (index)}\n\t\t<TabletWeave weaves={tablet} tabletIndex={index}/>\n\t{/each}\n</div>\n\n<style>\n\t@media all {\n\t\t.tabletWeaveIndices {\n\t\t\twidth: 25px;\n\t\t\ttext-align: right;\n\t\t\tpadding-right: 5px;\n\t\t\tmargin-top: -25px;\n\t\t}\n\t\t.weaveSize1 .tabletWeaveIndex {\n\t\t\theight: 14px;\n\t\t\tpadding-top: 0;\n\t\t}\n\t\t.weaveSize2 .tabletWeaveIndex {\n\t\t\theight: 24px;\n\t\t\tpadding-top: 0;\n\t\t}\n\t\t.weaveSize3 .tabletWeaveIndex {\n\t\t\theight: 18px;\n\t\t\tpadding-top: 3.7px;\n\t\t}\n\t\t.weaveSize1 .even,\n\t\t.weaveSize2 .even {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { tablets, weaveRows, rotationDirections } from '../stores/stores.js';\n\t\n\t$: isActive = (i, j) => {\n\t\treturn (typeof $rotationDirections[i] !== 'undefined') && (typeof $rotationDirections[i][j] !== 'undefined') && ($rotationDirections[i][j] === true);\n\t};\n\t\n\tconst resetDirections = () => {\n\t\t$rotationDirections = {};\n\t}\n\t\n\tconst changeDirectionForRow = (row: number) => {\n\t\t$tablets.forEach((element, column) => {\n\t\t\tchangeDirectionForCell(row, column);\n\t\t});\n\t}\n\t\n\tconst changeDirectionForCell = (row: number, column: number) => {\n\t\tif (typeof $rotationDirections[row] === 'undefined') {\n\t\t\t$rotationDirections[row] = {};\n\t\t}\n\t\tif ($rotationDirections[row][column]) {\n\t\t\tdelete $rotationDirections[row][column];\n\t\t\t$rotationDirections = $rotationDirections;\n\t\t} else {\n\t\t\t$rotationDirections[row][column] = true;\n\t\t}\n\t}\n</script>\n\n<table>\n\t<tr uk-sticky>\n\t\t<th>\n\t\t\t<button class=\"resetDirections\" type=\"button\" uk-icon=\"icon: trash; ratio: 0.7\" on:click={resetDirections}></button>\n\t\t</th>\n\t\t{#each $tablets as tablet, j (j)}\n\t\t\t<th>{j + 1}</th>\n\t\t{/each}\n\t</tr>\n\t{#each [...Array($weaveRows).keys()] as row, i (i)}\n\t\t<tr>\n\t\t\t<th class=\"uk-text-right\">\n\t\t\t\t<button type=\"button\" on:click={() => changeDirectionForRow(i)} uk-tooltip=\"Drehrichtung für alle Brettchen umkehren\">{i + 1}</button>\n\t\t\t</th>\n\t\t\t{#each $tablets as tablet, j (j)}\n\t\t\t\t<td class=\"{isActive(i, j) ? 'active' : ''}\">\n\t\t\t\t\t<button type=\"button\" class=\"cellLink\" on:click={() => changeDirectionForCell(i, j)} uk-tooltip=\"{j + 1}, {i + 1}\">x</button>\n\t\t\t\t</td>\n\t\t\t{/each}\n\t\t</tr>\n\t{/each}\n</table>\n\n<style>\n\t@media all {\n\t\ttable {\n\t\t\tborder: 1px solid black;\n\t\t\tborder-collapse: collapse;\n\t\t}\n\t\ttr {\n\t\t\tbackground-color: #FFFFFF;\n\t\t\tpadding: 0 1px;\n\t\t}\n\t\tth, td {\n\t\t\tmin-width: 12px;\n\t\t\theight: 18.7px;\n\t\t\tborder: 1px solid #999999;\n\t\t\tline-height: 1.3em;\n\t\t\tfont-size: 10px;\n\t\t\tcolor: #333333;\n\t\t}\n\t\tth {\n\t\t\tborder-top: 0px;\n\t\t\tborder-left: 0px;\n\t\t}\n\t\t.cellLink {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t\theight: 18px;\n\t\t\tcolor: transparent !important;\n\t\t}\n\t\t.active {\n\t\t\tbackground-color: #CCCCCC !important;\n\t\t}\n\t\tbutton {\n\t\t\tdisplay: inline;\n\t\t\tborder: 0;\n\t\t\tbackground-color: transparent;\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n\t\n\t@media print {\n\t\t.resetDirections {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { weaveRows, initStores, templates, appConfig } from './stores/stores.js';\n\timport { weavesFront, weavesBack } from './stores/weaves.js';\n\timport { onMount } from 'svelte';\n    import * as animateScroll from \"svelte-scrollto\";\n    import NavBar from \"./components/NavBar.svelte\";\n\timport ThreadingChart from \"./components/ThreadingChart.svelte\";\n    import Weave from \"./components/Weave.svelte\";\n    import Instructions from \"./components/Instructions.svelte\";\n    \n    let hiddenInstructions = false;\n    let hiddenWeaveBack = false;\n    \n\tonMount(() => {\n\t\tinitStores();\n\t});\n\t\n\tconst addWeaveRow = (event) => {\n\t\t$weaveRows = $weaveRows + 1;\n\t\tanimateScroll.scrollToBottom();\n\t}\n\t\n\tconst removeWeaveRow = (event) => {\n\t\t$weaveRows = $weaveRows - 1;\n\t}\n</script>\n\n<main>\n\n\t<NavBar/>\n\n\t<div class=\"uk-section uk-section-xsmall uk-section-muted threadingChart\">\n\t\t<div class=\"uk-container uk-container-small uk-container-expand\">\n\t\t\t<h2>Schärbrief</h2>\n\t\t\t<ThreadingChart />\n\t\t</div>\n\t</div>\n\n\t<div class=\"uk-section uk-section-xsmall preview\">\n\t\t<div class=\"uk-container uk-container-small uk-container-expand\">\n\t\t\t\n\t\t\t<!-- First row -->\n\t\t\t<div class=\"uk-flex uk-flex-between uk-flex-top\">\n\t\t\t\t<div class=\"uk-flex-none\">\n\t\t\t\t\t<ul class=\"uk-iconnav uk-iconnav-vertical\">\n\t\t\t\t\t    <li hidden={!hiddenInstructions}>\n\t\t\t\t\t    \t<button type=\"button\"\n\t\t\t\t\t    \t\tuk-icon=\"icon: thumbnails\"\n\t\t\t\t\t    \t\tuk-tooltip=\"Webbrief anzeigen\"  \n\t\t\t\t\t    \t\ton:click={() => hiddenInstructions = false}></button>\n\t\t\t\t    \t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t    <div class=\"uk-first-column uk-text-center\" hidden={hiddenInstructions}>\n\t\t\t    \t<h3>\n\t\t\t    \t\tWebbrief \n\t\t\t    \t\t<button type=\"button\"\n\t\t\t    \t\t\tclass=\"uk-button uk-button-link\" \n\t\t\t    \t\t\ton:click={() => hiddenInstructions = true}><span class=\"uk-margin-small-right\" uk-icon=\"shrink\"></span></button>\n\t\t    \t\t</h3>\n\t\t\t    </div>\n\t\t\t    <div class=\"uk-text-center uk-margin-small-bottom\">\n\t\t\t    \t<h3>Vorderseite</h3>\n\t\t\t    </div>\n\t\t\t    <div class=\"uk-text-center\" hidden={hiddenWeaveBack}>\n\t\t\t    \t<h3>\n\t\t\t    \t\tRückseite\n\t\t\t    \t\t<button type=\"button\"\n\t\t\t    \t\t\tclass=\"uk-button uk-button-link\" \n\t\t\t    \t\t\ton:click={() => hiddenWeaveBack = true}><span class=\"uk-margin-small-right\" uk-icon=\"shrink\"></span></button>\n\t\t    \t\t</h3>\n\t\t\t    </div>\n\t\t\t\t<div class=\"uk-flex-none\">\n\t\t\t\t\t<ul class=\"uk-iconnav uk-iconnav-vertical\">\n\t\t\t\t\t    <li hidden={!hiddenWeaveBack}>\n\t\t\t\t\t    \t<button type=\"button\"\n\t\t\t\t\t    \t\tuk-icon=\"icon: grid\"\n\t\t\t\t\t    \t\tuk-tooltip=\"Rückseite des Webbandes anzeigen\" \n\t\t\t\t\t    \t\ton:click={() => hiddenWeaveBack = false}></button>\n\t\t\t\t    \t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\t\t\t    \n\n\t\t    <!-- Second row -->\n\t\t    <div class=\"uk-flex uk-flex-between uk-flex-top\">\n\t\t    \t<div class=\"uk-flex-none\"></div>\n\t\t\t    <div class=\"scrollable\" hidden={hiddenInstructions}>\n\t\t\t\t\t<Instructions />\n\t\t\t    </div>\n\t\t\t    <div class=\"uk-margin-medium-top scrollable\">\n\t\t        \t<Weave weavePattern={$weavesFront}/>\n\t\t\t    </div>\n\t\t\t    <div class=\"uk-margin-medium-top scrollable\" hidden={hiddenWeaveBack}>\n\t\t\t    \t<Weave weavePattern={$weavesBack}/>\n\t\t\t    </div>\n\t\t\t    <div class=\"uk-flex-none\"></div>\n\t\t    </div>\n\n\t\t    <!-- Third row -->\n\t\t    <div class=\"uk-flex uk-flex-around uk-flex-top\">\n\t\t\t    <div class=\"uk-first-column\"></div>\n\t\t\t    <div class=\"uk-margin-small-top uk-text-center\">\n\t\t\t    \t<button class=\"uk-icon-button uk-button-secondary uk-button-large uk-width-small uk-margin-small-bottom\" uk-icon=\"plus\" \n\t\t\t    \t\ton:click|preventDefault={addWeaveRow}\n\t\t\t    \t\tuk-tooltip=\"Webreihe hinzufügen\"></button>\n\t\t\t    \t<button class=\"uk-icon-button uk-button-secondary uk-button-large uk-width-small uk-margin-small-bottom\" uk-icon=\"minus\" \n\t\t\t    \t\ton:click|preventDefault={removeWeaveRow}\n\t\t\t    \t\tuk-tooltip=\"Webreihe entfernen\"></button>\n\t\t\t    </div>\n\t\t\t    <div></div>\n\t\t    </div>\n\t\t</div>\n\t</div>\n\t\n</main>\n\n<style>\n\t.scrollable {\n\t\tpadding: 10px 0 45px 0;\n\t\t/*\n\t\toverflow-x: scroll;\n\t\toverflow-y: visible;\n\t\t*/\n\t}\n\t\n\t@media print {\n\t\tbutton {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.preview {\n\t\t\tpage-break-inside: avoid;\n\t\t}\n\t}\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","null_to_empty","value","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","length","update","pop","i","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","undefined","bound","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","skip_bound","root","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","appConfig","localStorage","JSON","parse","weaveSize","weaveBorderColor","weftColor","weaveLength","stringify","storedWeaveRows","weaveRows","parseInt","storedTablets","tablets","sDirection","holes","threads","color","storedRotationDirections","rotationDirections","initialized","$initialized","$weaveRows","$tablets","$rotationDirections","rotDirValue","reduce","previousValue","_","prev","idx","colors","currentValue","curr","location","hash","btoa","patternColors","summary","tablet","thread","entries","count","$appConfig","$patternColors","singleYarnLength","Number","yarnLengths","colorCount","yarnLength","weavesFront","tabletIndex","generateWeaves","weavesBack","colorIndex","direction","numberOfHoles","previousRotation","offset","tabletDirection","rotateBack","weaveColor","$","selector","querySelector","extend","args","assign","cumulativeOffset","top","left","offsetTop","offsetLeft","offsetParent","directScroll","body","scrollTop","inSetter","documentElement","pageYOffset","scrollLeft","pageXOffset","defaultOptions","container","duration","delay","easing","t","pow","onStart","onDone","onAborting","scrollX","scrollY","_scrollTo","x","y","cumulativeOffsetContainer","cumulativeOffsetTarget","initialX","initialY","targetX","targetY","diffX","diffY","scrolling","started","start_time","end_time","delayStart","tick","progress","scrollToTopLeft","fulfill","loop","scrollContainerHeight","containerElement","scrollHeight","offsetHeight","html","max","clientHeight","scrollToBottom","opts","proceedOptions","templates","getTime","showColors","updateColor","replace","e","wl","String","fromCharCode","lastTablet","newTablet","hole","weaveRow","weave","classNames","weaves","weavePattern","changeDirectionForRow","row","column","changeDirectionForCell","isActive","j","hiddenInstructions","hiddenWeaveBack","parts","atob","substring","split","numberOfTablets","numberOfWeaves","initRotationDirections","col","initTablets","colorCode","initStores","animateScroll.scrollToBottom"],"mappings":"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"}